---
title: Incremental Builds
layout: default
---

%h1 Incremental Builds

%p Incremental builds are performed by our <a href="/development/#ci">CI system</a> any time the code changes.

%h2 Latest Stable Incremental Build
%table.downloads.incremental-builds#latest-stable
  %tr
    %th.col-build Build
    %th.col-dist Binary Distribution
    %th.col-docs Documentation
    %th.col-changes Changes
    %th.col-git Git
  %tr
    %td.build
      .version
        %a{:href=>''}
      .release-date
    %td
      %a.dist{:href=>''} 
        ZIP Archive
        %span.dist-size
    %td
      %ul
        %li
          %a.html-docs{:href=>''} 
            Browse
        %li
          %a.pdf-docs{:href=>''} 
            PDF
    %td
      %a.changes{:href=>''}
        Changes
    %td
      %ul.git
        %li
          %a.tree{:href=>''} Tree
        %li
          %a.commits{:href=>''} Commits



%h2 Recent Incremental Builds

%table.downloads.incremental-builds#builds
  %tr
    %th.col-build Build
    %th.col-dist Binary Distribution
    %th.col-docs Documentation
    %th.col-changes Changes
    %th.col-git Git
  


:javascript
  var build_manager;

  $( function() {

    build_manager = {
      base_url: 'https://torquebox.ci.cloudbees.com/job/torquebox/',
      rss_url: 'https://torquebox.ci.cloudbees.com/job/torquebox/rssAll',
      html_doc_suffix: '/artifact/docs/en-US/target/docbook/publish/en-US/xhtml/index.html',
      pdf_doc_suffix:  '/artifact/docs/en-US/target/docbook/publish/en-US/pdf/torquebox-docs-en_US.pdf',


      start: function() {
        build_manager.populate_latest_build();
        build_manager.populate_recent_builds();
      },

      populate_latest_build: function() {
        $.ajax( { url: '/builds/LATEST/metadata.json',
                  dataType: 'json',
                  success: build_manager.process_latest_build_details } );
      },

      process_latest_build_details: function(data) {
        if ( ! data ) {
          return;
        }
        build_num = data['build_number'];
        build_revision = data['build_revision'];

        if ( build_revision.indexOf( 'unknown' ) >= 0 ) {
          build_revision = null;
        }

        dist_bytes = data['dist_size'];
        dist_mb = dist_bytes / (1024 * 1024);

        latest_url = build_manager.base_url + build_num;

        latest_div = $( '#latest-stable' );

        latest_div.find( '.dist-size' ).text( '(' + Math.floor( dist_mb ) + 'mb)' );

        latest_div.find( '.version a' ).text( build_num );
        latest_div.find( '.version a' ).attr( 'href', latest_url );

        short_revision = build_revision.substring(0,6);
        build_date_div = latest_div.find( '.release-date' );

        build_time = new Date( data['build_time'] * 1000 );
        formatted_time = build_time.format( "dd mmmm yyyy" ) + '<br/>' + build_time.format( "HH:MM" ) + ' UTC';
        build_date_div.append( formatted_time );

        build_date_div.append( $( '<br/><a href="https://github.com/torquebox/torquebox/commits/' + build_revision + '">' + short_revision + '...</a></li>' ) );

        latest_div.find( 'a.dist' ).attr( 'href', '/builds/' + build_num + '/torquebox-dist-bin.zip' );

        latest_div.find( 'a.html-docs' ).attr( 'href', latest_url + build_manager.html_doc_suffix );
        latest_div.find( 'a.pdf-docs' ).attr( 'href', latest_url + build_manager.pdf_doc_suffix );
        latest_div.find( 'a.changes' ).attr( 'href', latest_url + '/changes' );

        latest_div.find( '.git a.tree' ).attr( 'href', 'https://github.com/torquebox/torquebox/tree/' + build_revision );
        latest_div.find( '.git a.commits' ).attr( 'href', 'https://github.com/torquebox/torquebox/commits/' + build_revision );
      },

      populate_recent_builds: function() {
        $.jGFeed(build_manager.rss_url, build_manager.process_feed, 20);
      },

      process_feed: function(feeds) {
        if ( ! feeds ) {
          return false;
        }
        for(var i=0; i<feeds.entries.length; i++){
          var entry = feeds.entries[i];
          build_manager.process_build( entry )
        }
      },
      process_build: function(entry) {
        chunks = entry.title.split(' ');
        number = chunks[1].replace( '#', '' );
        status = 'unknown';
        if ( chunks[2].indexOf( 'stable' ) >= 0 ) {
          status = 'stable';
        } else if ( chunks[2].indexOf( 'back' ) >= 0 ) {
          status = 'repaired';
        } else if ( chunks[2].indexOf( 'abort' ) >= 0 ) {
          status = 'aborted';
        } else if ( chunks[2].indexOf( 'broken' ) >= 0 ) {
          status = 'broken';
        }
        link = entry.link;
        build_div = $('<tr id="build-' + number + '"class="build ' + status + '"></tr>' );

        build_div.append( $('<td class="number"><div class="version"><a href="' + link + '">' + number + '</a></div><div class="release-date"></div></td>' ) );

        build_time = new Date( entry.publishedDate );
        formatted_time = build_time.format( "dd mmmm yyyy" ) + '<br/>' + build_time.format( "HH:MM" ) + ' UTC';
        build_date_div = build_div.find( '.release-date' );
        build_date_div.append( formatted_time );

        build_div.append( $('<td class="download"></td>' ) );
        build_div.append( $('<td class="docs"></td>' ) );

        if ( status == 'repaired' || status == 'stable' ) {
          dist_link     = '/builds/' + number + '/torquebox-dist-bin.zip';
          html_doc_link = link + build_manager.html_doc_suffix;
          pdf_doc_link  = link + build_manager.pdf_doc_suffix;

          build_div.find( '.download').append( $( '<span class="dist"><a href="' + dist_link + '">ZIP Archive <span class="dist-size"></span></a></span>' ) );
          build_div.find( '.docs').append( $( '<ul></ul>' ) );
          build_div.find( '.docs ul').append( $( '<li class="html-docs"><a href="' + html_doc_link + '">Browse</a></li>' ) );
          build_div.find( '.docs ul').append( $( '<li class="pdf-docs"><a href="' + pdf_doc_link + '">PDF</a></li>' ) );
        }

        changes_link = 'https://torquebox.ci.cloudbees.com/job/torquebox/' + number + '/changes';
        build_div.append( $('<td class="changes"><a href="' + changes_link + '">Changes</a></td>' ) );
        build_div.append( $('<td class="git"></td>' ) );

        build_manager.builds.append( build_div );
        build_manager.request_build_details( number );
      },
  
      request_build_details: function(build_number) {
        $.ajax( { url: '/builds/' + build_number + '/metadata.json', 
                  dataType: 'json',
                  success: build_manager.process_details,
                  error:   function(){ build_manager.process_details_error(build_number) } } );
      },

      process_details_error: function(build_number) {
      },

      process_details: function(data) {
        if ( ! data ) {
          return;
        }
        build_num = data['build_number'];
        build_revision = data['build_revision'];

        if ( build_revision.indexOf( 'unknown' ) >= 0 ) {
          build_revision = null;
        } 
    
        dist_bytes = data['dist_size'];
        dist_mb = dist_bytes / (1024 * 1024);

        build_div = $( '#build-' + build_num );
        dist_size_span = build_div.find( '.dist-size' );
        dist_size_span.text( '(' + Math.floor( dist_mb ) + 'mb)' );

        if ( build_revision ) {
          short_revision = build_revision.substring(0,6);
          build_date_div = build_div.find( '.release-date' );
          build_date_div.append( $( '<br/><a href="https://github.com/torquebox/torquebox/commits/' + build_revision + '">' + short_revision + '...</a></li>' ) );

          git_div = build_div.find( '.git' );
          git_div.append( $( '<ul></ul>' ) );
          git_div.find( 'ul' ).append( $( '<li><a href="https://github.com/torquebox/torquebox/tree/' + build_revision + '">Tree</a></li>' ) );
          git_div.find( 'ul' ).append( $( '<li><a href="https://github.com/torquebox/torquebox/commits/' + build_revision + '">Commits</a></li>' ) );
        }
      },
     
      builds: $('#builds'),
    };

    build_manager.start();
  } );
